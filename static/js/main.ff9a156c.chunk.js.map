{"version":3,"sources":["utils/sudoku.js","reducers/grid.js","reducers/status.js","reducers/index.js","components/Box.js","actions/grid.js","components/Grid.js","App.js","serviceWorker.js","index.js"],"names":["VALUES","range","DIM","check","grid","number","rowNum","colNum","includes","Error","row","getRow","column","map","getCol","square","rowStart","colStart","result","i","j","push","flatten","getSquare","getNext","solver","isLast","nextRowNum","nextColNum","initialState","gridHistory","window","isSolved","isEdited","rootReducer","combineReducers","state","cloneDeep","action","type","col","val","changedRow","slice","originalClone","lastState","splice","length","status","assignIn","getRandomColor","Math","random","pallet","getBoxColor","rowGroup","toString","colGroup","Box","this","props","setState","isFixed","nextProps","nextState","e","store","parseInt","target","value","isDeleted","indexOf","dispatch","inputValue","input","ref","style","backgroundColor","className","disabled","onChange","handleChange","transitionName","transitionAppear","transitionEnterTimeout","transitionLeaveTimeout","transitionAppearTimeout","React","Component","Grid","renderBox","key","vals","bind","App","unsubscribe","subscribe","forceUpdate","getState","onClick","clonedGrid","isSolvable","values","list","Object","keys","reduce","total","isComplete","alert","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","compose","applyMiddleware","thunk","devToolsExtension","f","createStore","finalCreateStore","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ff9a156c.chunk.js","sourcesContent":["import { cloneDeep, flatten, range, includes } from \"lodash\";\n\nconst VALUES = range(1, 10);\nconst DIM = range(0, 9);\nconst ZERO = 0;\n\nconst getRow = (grid, rowNum) => {\n  if (!includes(DIM, rowNum)) {\n    throw new Error(\"rowNum not in range\");\n  }\n  return grid[rowNum];\n};\n\nconst getCol = (grid, colNum) => {\n  if (!includes(DIM, colNum)) {\n    throw new Error(\"colNum not in range\");\n  }\n  return grid.map((row) => row[colNum]);\n};\n\nconst getSquare = (grid, rowNum, colNum) => {\n  if (!includes(DIM, rowNum) || !includes(DIM, colNum)) {\n    throw new Error(\"rowNum or colNum are not in range\");\n  }\n  let rowStart = rowNum - (rowNum % 3);\n  let colStart = colNum - (colNum % 3);\n  let result = [];\n  for (let i = 0; i < 3; i++) {\n    result[i] = result[i] || [];\n    for (let j = 0; j < 3; j++) {\n      result[i].push(grid[rowStart + i][colStart + j]);\n    }\n  }\n  return flatten(result);\n};\n\nconst check = (grid, number, rowNum, colNum) => {\n  if (!includes(DIM, rowNum) || !includes(DIM, colNum)) {\n    throw new Error(\"rowNum or colNum are not in range\");\n  }\n\n  if (!includes(VALUES, number)) {\n    throw new Error(\"number is not in range\");\n  }\n\n  let row = getRow(grid, rowNum);\n  let column = getCol(grid, colNum);\n  let square = getSquare(grid, rowNum, colNum);\n\n  if (\n    !includes(row, number) &&\n    !includes(column, number) &&\n    !includes(square, number)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nconst getNext = (rowNum = 0, colNum = 0) => {\n  return colNum !== 8\n    ? [rowNum, colNum + 1]\n    : rowNum !== 8\n    ? [rowNum + 1, 0]\n    : [0, 0];\n};\n\nexport const solver = (grid, rowNum = 0, colNum = 0) => {\n  if (includes(DIM, rowNum) < 0 || includes(DIM, colNum) < 0) {\n    throw new Error(\"rowNum or colNum are not in range\");\n  }\n  let isLast = rowNum >= 8 && colNum >= 8;\n\n  if (grid[rowNum][colNum] !== ZERO && !isLast) {\n    let [nextRowNum, nextColNum] = getNext(rowNum, colNum);\n    return solver(grid, nextRowNum, nextColNum);\n  }\n\n  for (let i = 1; i <= 9; i++) {\n    if (check(grid, i, rowNum, colNum)) {\n      grid[rowNum][colNum] = i;\n      let [nextRowNum, nextColNum] = getNext(rowNum, colNum);\n      if (!nextRowNum && !nextColNum) {\n        return true;\n      }\n      if (solver(grid, nextRowNum, nextColNum)) {\n        return true;\n      }\n    }\n  }\n\n  grid[rowNum][colNum] = ZERO;\n  return false;\n};\n\nexport const isSolvable = (grid) => {\n  let clonedGrid = cloneDeep(grid);\n  return solver(clonedGrid);\n};\n\nexport const isComplete = (grid) => {\n  let values = flatten(grid);\n  let list = {};\n  values.map((val) => (list[val] = list[val] ? list[val] + 1 : 1));\n  delete list[\"0\"];\n  var total = Object.keys(list).reduce((total, key) => total + list[key], 0);\n  return total === 81 ? true : false;\n};\n","import { cloneDeep } from \"lodash\";\nimport { solver } from \"../utils/sudoku\";\n\n//TODO: create random generator instead of mock init state\nconst initialState = [\n  [8, 0, 0, 4, 0, 6, 0, 0, 7],\n  [0, 0, 0, 0, 0, 0, 4, 0, 0],\n  [0, 1, 0, 0, 0, 0, 6, 5, 0],\n  [5, 0, 9, 0, 3, 0, 7, 8, 0],\n  [0, 0, 0, 0, 7, 0, 0, 0, 0],\n  [0, 4, 8, 0, 2, 0, 1, 0, 3],\n  [0, 5, 2, 0, 0, 0, 0, 9, 0],\n  [0, 0, 1, 0, 0, 0, 0, 0, 0],\n  [3, 0, 0, 9, 0, 2, 0, 0, 5],\n];\n\nlet gridHistory = window.gridHistory || [];\n\nexport const grid = (state = cloneDeep(initialState), action) => {\n  switch (action.type) {\n    case \"INPUT_VALUE\":\n      let { row, col, val } = action;\n      let changedRow = [\n        ...state[row].slice(0, col),\n        val,\n        ...state[row].slice(col + 1),\n      ];\n      gridHistory.push(state);\n      return [...state.slice(0, row), changedRow, ...state.slice(row + 1)];\n    case \"SOLVE\":\n      let originalClone = cloneDeep(initialState);\n      solver(originalClone);\n      window.gridHistory = [];\n      return originalClone;\n    case \"CLEAR\":\n      window.gridHistory = [];\n      return cloneDeep(initialState);\n    case \"UNDO\":\n      let lastState = window.gridHistory.splice(gridHistory.length - 1, 1);\n      return lastState[0];\n    default:\n      return state;\n  }\n};\n","import { cloneDeep, assignIn } from \"lodash\";\n\nconst initialState = {\n  isSolved: false,\n  isEdited: false,\n};\n\nexport function status(state = cloneDeep(initialState), action) {\n  switch (action.type) {\n    case \"INPUT_VALUE\":\n      return assignIn({}, state, { isEdited: true });\n    case \"SOLVE\":\n      return assignIn({}, state, { isSolved: true, isEdited: true });\n    case \"CLEAR\":\n      return assignIn({}, state, { isSolved: false, isEdited: false });\n    case \"UNDO\":\n      if (!window.gridHistory.length) {\n        return assignIn({}, state, { isEdited: false });\n      }\n      return state;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { grid } from \"./grid\";\nimport { status } from \"./status\";\n\nconst rootReducer = combineReducers({\n  grid,\n  status,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-transition-group/CSSTransition\";\nimport { inputValue } from \"../actions/grid\";\n\nconst getRandomColor = () => {\n  let color = \"hsl(\" + Math.random() * 360 + \", 100%, 80%)\";\n  return color;\n};\n\nconst pallet = {\n  \"00\": getRandomColor(),\n  \"01\": getRandomColor(),\n  \"02\": getRandomColor(),\n  \"10\": getRandomColor(),\n  \"11\": getRandomColor(),\n  \"12\": getRandomColor(),\n  \"20\": getRandomColor(),\n  \"21\": getRandomColor(),\n  \"22\": getRandomColor(),\n};\n\nconst getBoxColor = (row, col) => {\n  let rowGroup = (~~(row / 3)).toString();\n  let colGroup = (~~(col / 3)).toString();\n  return pallet[rowGroup + colGroup];\n};\n\nclass Box extends React.Component {\n  componentWillMount() {\n    const { val } = this.props;\n    this.setState({ isFixed: val ? true : false });\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.val !== this.props.val;\n  }\n  handleChange(e) {\n    const { row, col, store } = this.props;\n    const range = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const val = parseInt(e.target.value);\n    const isDeleted = e.target.value === \"\";\n\n    if (range.indexOf(val) > -1 || isDeleted) {\n      store.dispatch(inputValue(row, col, isDeleted ? 0 : val));\n    }\n  }\n  render() {\n    const { row, col, val, isSolved } = this.props;\n    const { isFixed } = this.state;\n    const input = (\n      <input\n        ref=\"input\"\n        style={{ backgroundColor: getBoxColor(row, col) }}\n        className={isFixed ? \"fixed\" : isSolved ? \"result\" : \"\"}\n        disabled={isFixed || isSolved}\n        value={val ? val : \"\"}\n        onChange={this.handleChange}\n      />\n    );\n\n    return (\n      <td>\n        {isSolved ? (\n          <ReactCSSTransitionGroup\n            transitionName=\"solved\"\n            transitionAppear={true}\n            transitionEnterTimeout={200}\n            transitionLeaveTimeout={200}\n            transitionAppearTimeout={200}\n          >\n            {input}\n          </ReactCSSTransitionGroup>\n        ) : (\n          input\n        )}\n      </td>\n    );\n  }\n}\n\nexport default Box;\n","export const inputValue = (row, col, val) => {\n  return {\n    type: \"INPUT_VALUE\",\n    row,\n    col,\n    val,\n  };\n};\n\nexport const solve = () => {\n  return {\n    type: \"SOLVE\",\n  };\n};\n\nexport const clear = () => {\n  return {\n    type: \"CLEAR\",\n  };\n};\n\nexport const undo = () => {\n  return {\n    type: \"UNDO\",\n  };\n};\n","import React from \"react\";\nimport Box from \"./Box\";\n\nclass Grid extends React.Component {\n  render() {\n    const { grid, status } = this.props;\n    const { isSolved } = status;\n    const renderBox = (row, val, col) => {\n      return (\n        <Box\n          key={col}\n          row={row}\n          col={col}\n          val={val}\n          isSolved={isSolved}\n          {...this.props}\n        />\n      );\n    };\n    const renderRow = (vals, row) => {\n      return <tr key={row}>{vals.map(renderBox.bind(this, row))}</tr>;\n    };\n\n    return (\n      <table>\n        <tbody>{grid.map(renderRow)}</tbody>\n      </table>\n    );\n  }\n}\n\nexport default Grid;\n","import React from \"react\";\nimport Grid from \"./components/Grid\";\nimport { isSolvable, isComplete } from \"./utils/sudoku\";\nimport { solve, clear, undo } from \"./actions/grid\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.unsubscribe = this.props.store.subscribe(() => {\n      this.forceUpdate();\n    });\n  }\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n  render() {\n    const { store } = this.props;\n    const { grid, status } = store.getState();\n    const { isSolved, isEdited } = status;\n    return (\n      <div>\n        <button\n          className=\"undo\"\n          disabled={window.gridHistory && !window.gridHistory.length}\n          onClick={() => store.dispatch(undo())}\n        >\n          ⤺ Undo\n        </button>\n        <button\n          className=\"clear\"\n          disabled={!isEdited}\n          onClick={() => store.dispatch(clear())}\n        >\n          ⟲ Clear\n        </button>\n\n        <Grid grid={grid} status={status} {...this.props} />\n\n        <button\n          className=\"check\"\n          disabled={isSolved}\n          onClick={() => {\n            if (isSolvable(grid)) {\n              if (isComplete(grid)) {\n                return alert(\"Congratulations, you solved it!!\");\n              }\n              alert(\"This Sudoku is solvable, keep going !!\");\n            } else {\n              alert(\"This Sudoku is NOT solvable\");\n            }\n          }}\n        >\n          Check\n        </button>\n        <button className=\"solve\" onClick={() => store.dispatch(solve())}>\n          Solve\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    window.location.hostname === \"[::1]\" ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log(\"Content is cached for offline use.\");\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst finalCreateStore = compose(\n  applyMiddleware(thunk),\n  window.devToolsExtension ? window.devToolsExtension() : (f) => f\n)(createStore);\n\nconst store = finalCreateStore(rootReducer);\n\nReactDOM.render(<App store={store} />, document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}